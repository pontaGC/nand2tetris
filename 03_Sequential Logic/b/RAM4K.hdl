// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
     DMux8Way(in=load, sel=address[9..11], a=L0, b=L1, c=L2, d=L3, e=L4, f=L5, g=L6, h=L7);
     RAM512(in=in, address=address[0..8], load=L0, out=R0);
     RAM512(in=in, address=address[0..8], load=L1, out=R1);
     RAM512(in=in, address=address[0..8], load=L2, out=R2);
     RAM512(in=in, address=address[0..8], load=L3, out=R3);
     RAM512(in=in, address=address[0..8], load=L4, out=R4);
     RAM512(in=in, address=address[0..8], load=L5, out=R5);
     RAM512(in=in, address=address[0..8], load=L6, out=R6);
     RAM512(in=in, address=address[0..8], load=L7, out=R7);
     Mux8Way16(a=R0, b=R1, c=R2, d=R3, e=R4, f=R5, g=R6, h=R7, sel=address[9..11], out=out);
}